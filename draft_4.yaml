# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: '2.0'

# This is your document metadata
info:
  version: "1.0.0"
  title: EHelse Referansekatalog API



################################################################################
#                  Host, Base Path, Schemes and Content Types                  #
################################################################################
host: 37.139.13.117
basePath: /dev/index.php/v1
schemes:
  - http
produces:
  - application/json
consumes:
  - application/json
  
tags:
  - name: Topic
    description: TODO
  - name: Page
    description:  TODO
  - name: Standard
    description:  TODO
  - name: StadardVersion
    description:  TODO
  - name: Profile
    description:  TODO
  - name: ProfileVersion
    description:  TODO
  - name: Fields
    description:  TODO
  - name: TargetGroup
    description:  TODO
  - name: Link
    description:  TODO
  - name: LinkCategory
    description:  TODO
    
  

  
parameters:
  standardId:
    name: standardId
    in: path
    description: ID of pet that needs to be fetched
    required: true
    type: integer


paths:
  /standards/:
    get:
      tags: 
        - Standard
      description: Gets `Standard` objects.
      responses:
        200:
          description: OK
          schema:
            title: ArrayOfStandards
            type: array
            items:
              $ref: '#/definitions/Standard' 
    post:
      tags: 
        - Standard
      description: Creates a new 'Standard' object.
      responses: 
        201:
          description: Created
          schema:
            $ref: '#/definitions/Standard' 
        400:
          description: Bad Request
        401: 
          description: Unauthorized
            
  /standards/{standardId}/:
    get:
      tags: 
        - Standard
      parameters:
        - $ref: "#/parameters/standardId"      
      description: Get a 'Standard' object.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Standard' 
                  
    put:
      tags: 
        - Standard
      parameters:
        - $ref: "#/parameters/standardId"   
      description: Update a 'Standard' object.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Standard' 
        400:
          description: Bad Request
        401: 
          description: Unauthorized
          
    delete:
      tags: 
        - Standard
      parameters:
        - $ref: "#/parameters/standardId"   
      description: test
      responses:
        204:
          description: No Content
        401: 
          description: Unauthorized
          
definitions:
  Standard:
    type: object
    properties:
        id:
          type: integer
        timestamp:
          type: string
          format: dateTime
        title:
          type: string
        description:
          type: string
        is_in_catalog:
          type: boolean
        sequence:
          type: integer
        topic_id:
          type: integer
  StandardVersion:
    type: object
    properties:
      id:
        type: integer
      standardId: 
        type: integer
      targetGroups:
        type: array
        items:
          $ref: '#/definitions/VersionTargetGroup' 
      links:
        type: array
        items:
          type: object
          properties:
            linkCategory:
              $ref: '#/definitions/LinkCategory' 
            links:
              type: array
              items:
                $ref: '#/definitions/Link' 
              
      fields:
        type: array
        items:
          $ref: '#/definitions/FieldValue' 
      
  Profile:
    type: object
    properties:
        id:
          type: integer
        timestamp:
          type: string
          format: dateTime
        title:
          type: string
        description:
          type: string
        is_in_catalog:
          type: boolean
        sequence:
          type: integer
        topic_id:
          type: integer
  ProfileVersion:
    type: object
    properties:
      id:
        type: integer
      profileId: 
        type: integer
      standardVersionId: 
        type: integer
      documentVersionId: 
        type: integer
  Topic:
    type: object
    properties:
      id: 
        type: integer
      timestamp: 
        type: string
        format: dateTime
      title:
        type: string
      description:
        type: string
      number:
        type: string
      is_in_catalog:
        type: boolean
      sequense: 
        type: integer
      parent:
        type: integer
        
  Page:
    type: object
    properties:
      id: 
        type: integer
      timestamp: 
        type: string
        format: dateTime
      title:
        type: string
      content:
        type: string
      sequence:
        type: integer
      topic_id:
        type: integer
  FieldType:
    type: object
    properties:
      id: 
        type: integer
      title:
        type: string
  Field:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      description:
        type: string
      sequence:
        type: integer
      fieldType: 
          $ref: '#/definitions/FieldType' 
      mandatory:
        type: boolean
  FieldValue:
    type: object
    properties:
      value:
        type: object
        properties:
          string:
            type: string
          date:
            type: string
            format: date
          integer:
            type: integer
      Field:
        $ref: '#/definitions/Field' 
  TargetGroup:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: integer
  VersionTargetGroup:
    type: object
    properties:
      id:
        type: integer
      deadline:
        type: string
      mandatory:
        type: string
      description:
        type: string
      targetGroup:
        $ref: '#/definitions/TargetGroup'
      action:
        type: string
        
  Link:
    type: object
    properties:
      id:
        type: integer
      text:
        type: string
      description:
        type: string
      url:
        type: string
        format: url
        
  LinkCategory:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string

    
    
              