# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: '2.0'

# This is your document metadata
info:
  version: "1.0.0"
  title: EHelse Referansekatalog API



################################################################################
#                  Host, Base Path, Schemes and Content Types                  #
################################################################################
host: 37.139.13.117
basePath: /dev/index.php/v1
schemes:
  - http
produces:
  - application/json
consumes:
  - application/json
  
tags:
  - name: Topic
    description: TODO
  - name: Page
    description:  TODO
  - name: Standard
    description:  TODO
  - name: StadardVersion
    description:  TODO
  - name: Profile
    description:  TODO
  - name: ProfileVersion
    description:  TODO
  - name: Fields
    description:  TODO
  - name: TargetGroup
    description:  TODO
  - name: Link
    description:  TODO
  - name: LinkCategory
    description:  TODO
    
  

  
parameters:
  standardId:
    name: standardId
    in: path
    description: ID of 'Standard' 
    required: true
    type: integer
  pageId:
    name: pageId
    in: path
    description: ID of 'Page' 
    required: true
    type: integer
  standardVersionId:
    name: standardVersionId
    in: path
    description: ID of 'StandardVersion' 
    required: true
    type: integer


paths:
  ## standards
  /standards/:
    get:
      tags: 
        - Standard
      description: Gets `Standard` objects.
      responses:
        200:
          description: OK
          schema:
            title: Standards
            type: array
            items:
              $ref: '#/definitions/Standard' 
    post:
      tags: 
        - Standard
      description: Creates a new 'Standard' object.
      parameters:
        - name: standard
          in: body
          required: true
          schema:
            $ref: '#/definitions/Standard'
      responses: 
        201:
          description: Created
          schema:
            $ref: '#/definitions/Standard' 
        400:
          description: Bad Request
        401: 
          description: Unauthorized
            
  /standards/{standardId}/:
    get:
      tags: 
        - Standard
      parameters:
        - $ref: "#/parameters/standardId"      
      description: Get a 'Standard' object.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Standard' 
    put:
      tags: 
        - Standard
      parameters:
        - $ref: "#/parameters/standardId"  
        - name: standard
          in: body
          required: true
          schema:
            $ref: '#/definitions/Standard'
      description: Update a 'Standard' object.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Standard' 
        400:
          description: Bad Request
        401: 
          description: Unauthorized
    delete:
      tags: 
        - Standard
      parameters:
        - $ref: "#/parameters/standardId"   
      description: test
      responses:
        204:
          description: No Content
        401: 
          description: Unauthorized
          
  
  /pages/:
    get:
      tags:
        - Page
      description: Gets 'Page' objects.
      responses:
        200:
          description: OK
          schema:
            title: ArrayOfPages
            type: array
            items:
              $ref: '#/definitions/Page' 
            
    post:
      tags: 
        - Page
      description: Creates a new 'Page' object.
      parameters:
        - name: page
          in: body
          required: true
          schema:
           $ref: '#/definitions/Page'
      responses: 
        201:
          description: Created
          schema:
            $ref: '#/definitions/Page' 
        400:
          description: Bad Request
        401: 
          description: Unauthorized
  
  /pages/{pageId}/:
    get:
      tags: 
        - Page
      parameters:
        - $ref: "#/parameters/pageId"      
      description: Get a 'Page' object.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Page'
    put:
      tags: 
        - Page
      parameters:
        - $ref: "#/parameters/pageId"   
        - name: page
          in: body
          required: true
          schema:
           $ref: '#/definitions/Page'
      description: Update a 'Page' object.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Page' 
        400:
          description: Bad Request
        401: 
          description: Unauthorized
    delete:
      tags: 
        - Page
      parameters:
        - $ref: "#/parameters/pageId"   
      description: Deletes a 'Page' object.
      responses:
        204:
          description: No Content
        401: 
          description: Unauthorized
          
################################
  ##todo    
  #standard versions
  /standards/{standardId}/versions/:
    get:
      tags:
        - Standard
        - StandardVersion
      description: Gets 'StandardVersion' objects.
      parameters:
        - $ref: '#/parameters/standardId'
      responses:
        200:
          description: OK
          schema:
            title: StandardVersions
            type: array
            items:
              $ref: '#/definitions/StandardVersion' 
    
    post:
      tags: 
        - Page
      description: Creates a new 'StandardVersion' object.
      parameters:
        - $ref: '#/parameters/standardId'
        - name: page
          in: body
          required: true
          schema:
           $ref: '#/definitions/StandardVersion'
      responses: 
        201:
          description: Created
          schema:
            $ref: '#/definitions/StandardVersion' 
        400:
          description: Bad Request
        401: 
          description: Unauthorized
  
          
  /standards/{standardId}/versions/{versionId}/:
    get:
      tags:
        - Standard
        - StandardVersion
      description: Gets 'StandardVersion' objects.
      parameters:
        - $ref: '#/parameters/standardId'
        - $ref: '#/parameters/standardVersionId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StandardVersion' 
    
    put:
      tags: 
        - Standard
        - StandardVersion
      description: Updates a 'StandardVersion' object.
      parameters:
        - $ref: '#/parameters/standardVersionId'
        - name: body
          in: body
          required: true
          schema:
           $ref: '#/definitions/StandardVersion'
      responses: 
        201:
          description: Created
          schema:
            $ref: '#/definitions/StandardVersion' 
        400:
          description: Bad Request
        401: 
          description: Unauthorized
          
    delete:
      tags: 
        - Standard
        - StandardVersion
      parameters:
        - $ref: "#/parameters/standardId"   
        - $ref: "#/parameters/standardVersionId"   
      description: Deletes a 'StandardVersion' object.
      responses:
        204:
          description: No Content
        401: 
          description: Unauthorized
      
  
  #standard fields        
  /standards/fields/:
    get:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
    post:
      summary: 
      description: 
      responses:
        200:
          description: OK
          
  /standards/fields/{fieldId}/:
    get:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
    put:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
    delete:
      summary: 
      description: 
      responses:
        200:
          description: OK

    post:
      tags: 
        - Standard
      description: Creates a new 'Standard' object.
      parameters:
        - name: standard
          in: body
          required: true
          schema:
            $ref: '#/definitions/Standard'
      responses: 
        201:
          description: Created
          schema:
            $ref: '#/definitions/Standard' 
        400:
          description: Bad Request
        401: 
          description: Unauthorized
          
  
  #profiles
  /profiles/:
    get:
      tags: 
        - Standard
      description: Gets `Standard` objects.
      responses:
        200:
          description: OK
          schema:
            title: ArrayOfStandards
            type: array
            items:
              $ref: '#/definitions/Standard' 
    post:
      tags: 
        - Standard
      description: Creates a new 'Standard' object.
      parameters:
        - name: standard
          in: body
          required: true
          schema:
            $ref: '#/definitions/Standard'
      responses: 
        201:
          description: Created
          schema:
            $ref: '#/definitions/Standard' 
        400:
          description: Bad Request
        401: 
          description: Unauthorized
            
  /profiles/{profileId}/:
    get:
      tags: 
        - Standard
      parameters:
        - $ref: "#/parameters/standardId"      
      description: Get a 'Standard' object.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Standard' 
    put:
      tags: 
        - Standard
      parameters:
        - $ref: "#/parameters/standardId"  
        - name: standard
          in: body
          required: true
          schema:
            $ref: '#/definitions/Standard'
      description: Update a 'Standard' object.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Standard' 
        400:
          description: Bad Request
        401: 
          description: Unauthorized
    delete:
      tags: 
        - Standard
      parameters:
        - $ref: "#/parameters/standardId"   
      description: test
      responses:
        204:
          description: No Content
        401: 
          description: Unauthorized
          
  #profile versions             
  /profiles/{profileId}/versions/:
    get:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
    post:
      summary: 
      description: 
      responses:
        200:
          description: OK
          
  /profiles/{profileId}/versions/{versionId}/:
    get:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
    put:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
    delete:
      summary: 
      description: 
      responses:
        200:
          description: OK
      
  #profile fields        
  /profiles/fields/:
    get:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
    post:
      summary: 
      description: 
      responses:
        200:
          description: OK
          
  /profiles/fields/{fieldId}/:
    get:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
    put:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
    delete:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
   
            
   #target groups        
  /target_groups/:
    get:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
    post:
      summary: 
      description: 
      responses:
        200:
          description: OK
          
  /target_groups/{targetGroupId}/:
    get:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
    put:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
    delete:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
   
     #target groups        
  /link_category/:
    get:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
    post:
      summary: 
      description: 
      responses:
        200:
          description: OK
          
  /link_category/{linkCategoryId}/:
    get:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
    put:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
    delete:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
  #topic groups        
  /topics/:
    get:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
    post:
      summary: 
      description: 
      responses:
        200:
          description: OK
          
  /topics/{topicId}/:
    get:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
    put:
      summary: 
      description: 
      responses:
        200:
          description: OK
    
    delete:
      summary: 
      description: 
      responses:
        200:
          description: OK
######################
  
          
definitions:
  Standard:
    type: object
    properties:
        id:
          type: integer
        timestamp:
          type: string
          format: dateTime
        title:
          type: string
        description:
          type: string
        is_in_catalog:
          type: boolean
        sequence:
          type: integer
        topic_id:
          type: integer
          
  StandardVersion:
    type: object
    properties:
      id:
        type: integer
      standardId: 
        type: integer
      targetGroups:
        type: array
        items:
          $ref: '#/definitions/VersionTargetGroup' 
      links:
        type: array
        items:
          type: object
          properties:
            linkCategory:
              $ref: '#/definitions/LinkCategory' 
            links:
              type: array
              items:
                $ref: '#/definitions/Link' 
              
      fields:
        type: array
        items:
          $ref: '#/definitions/FieldValue' 
      
  Profile:
    type: object
    properties:
        id:
          type: integer
        timestamp:
          type: string
          format: dateTime
        title:
          type: string
        description:
          type: string
        is_in_catalog:
          type: boolean
        sequence:
          type: integer
        topic_id:
          type: integer
          
  ProfileVersion:
    type: object
    properties:
      id:
        type: integer
      profileId: 
        type: integer
      standardVersionId: 
        type: integer
      documentVersionId: 
        type: integer
  Topic:
    type: object
    properties:
      id: 
        type: integer
      timestamp: 
        type: string
        format: dateTime
      title:
        type: string
      description:
        type: string
      number:
        type: string
      is_in_catalog:
        type: boolean
      sequense: 
        type: integer
      parent:
        type: integer
        
  Page:
    type: object
    properties:
      id: 
        type: integer
      timestamp: 
        type: string
        format: dateTime
      title:
        type: string
      content:
        type: string
      sequence:
        type: integer
      topic_id:
        type: integer
        
  FieldType:
    type: object
    properties:
      id: 
        type: integer
      title:
        type: string
        
  Field:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      description:
        type: string
      sequence:
        type: integer
      fieldType: 
          $ref: '#/definitions/FieldType' 
      mandatory:
        type: boolean
        
  FieldValue:
    type: object
    properties:
      value:
        type: object
        properties:
          string:
            type: string
          date:
            type: string
            format: date
          integer:
            type: integer
      Field:
        $ref: '#/definitions/Field' 
        
  TargetGroup:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: integer
        
  VersionTargetGroup:
    type: object
    properties:
      id:
        type: integer
      deadline:
        type: string
      mandatory:
        type: string
      description:
        type: string
      targetGroup:
        $ref: '#/definitions/TargetGroup'
      action:
        type: string
        
  Link:
    type: object
    properties:
      id:
        type: integer
      text:
        type: string
      description:
        type: string
      url:
        type: string
        format: url
        
  LinkCategory:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string

    
    
              